"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[4925],{41200:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"appendix/script-api/inventory-script-api/validate-change-status-request","title":"validateChangeStatusRequest","description":"Validates a change status request based on the provided parameters.","source":"@site/docs/appendix/script-api/inventory-script-api/validate-change-status-request.md","sourceDirName":"appendix/script-api/inventory-script-api","slug":"/appendix/script-api/inventory-script-api/validate-change-status-request","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/validate-change-status-request","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/validate-change-status-request.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14,"title":"validateChangeStatusRequest","description":"Validates a change status request based on the provided parameters."},"sidebar":"tutorialSidebar","previous":{"title":"move","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/move"},"next":{"title":"validateMoveRequest","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/validate-move-request"}}');var a=s(74848),r=s(28453);const i={sidebar_position:14,title:"validateChangeStatusRequest",description:"Validates a change status request based on the provided parameters."},d="system.mes.inventory.validateChangeStatusRequest",c={},o=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"systemmesinventoryvalidatechangestatusrequest",children:"system.mes.inventory.validateChangeStatusRequest"})}),"\n",(0,a.jsx)(t.p,{children:"Validates a change status request based on the provided parameters."}),"\n",(0,a.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"system.mes.inventory.validateChangeStatusRequest(**change_status_request)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"type"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"The type of request defined by the LotRecordType Enum. It is internally set and must not be modified, as changes may break functionality."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"lotId"})}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,a.jsx)(t.td,{children:"The ID of the inventory lot whose status is being updated."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"newStatus"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"The new status to be assigned to the inventory lot."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"operationId"})}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,a.jsx)(t.td,{children:"The ID of the operation changing the status of this inventory."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"notes"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"Notes related to the change status request."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"spare1"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"spare2"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"spare3"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(t.p,{children:"Returns a JSON object where keys are field names and values are lists of validation violation messages."}),"\n",(0,a.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# Generate the object structure for a new change status request object with no initial arguments\nchange_status_request = system.mes.inventory.newChangeStatusRequest()\n\n# Set basic attributes for the new change status requestOPOE\nchange_status_request['newStatus'] = 'AVAILABLE'\nchange_status_request['lotId'] = '01JJCQEJYG-E31FHVTF-JB6WEJTC'\n# (You can continue setting other properties as needed here)\n\n# Validate change status request parameters\nvalidation_errors = system.mes.inventory.validateChangeStatusRequest(**change_status_request)\n\nif len(validation_errors) > 0:\n    print('Validation errors found:', validation_errors)\nelse:\n    print('Change status request parameters are valid.')\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>d});var n=s(96540);const a={},r=n.createContext(a);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);