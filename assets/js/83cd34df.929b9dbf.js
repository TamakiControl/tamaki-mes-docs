"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[8870],{14015:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"appendix/script-api/inventory-script-api/check-location-has-capacity","title":"checkLocationHasCapacity","description":"Checks if a location can store the given quantity of inventory.","source":"@site/docs/appendix/script-api/inventory-script-api/check-location-has-capacity.md","sourceDirName":"appendix/script-api/inventory-script-api","slug":"/appendix/script-api/inventory-script-api/check-location-has-capacity","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/check-location-has-capacity","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/check-location-has-capacity.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"checkLocationHasCapacity","description":"Checks if a location can store the given quantity of inventory."},"sidebar":"tutorialSidebar","previous":{"title":"Introduction to Inventory Script API","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/intro"},"next":{"title":"newConsumeRequest","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/new-consume-request"}}');var a=n(74848),c=n(28453);const s={sidebar_position:2,title:"checkLocationHasCapacity",description:"Checks if a location can store the given quantity of inventory."},r="system.mes.inventory.checkLocationHasCapacity",o={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"systemmesinventorychecklocationhascapacity",children:"system.mes.inventory.checkLocationHasCapacity"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(t.p,{children:["Checks if the ",(0,a.jsx)(t.a,{href:"../../data-model/location-model/location",children:"Locations"})," record can store the given quantity of material."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"NOTE:"})," If an inventory lot ID is provided, the material ID parameter becomes optional (cannot be None or left as null).\nThis can be left as an empty string."]}),"\n",(0,a.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"system.mes.inventory.checkLocationHasCapacity(locationIdOrPath, lotIdOrName, materialId, quantity)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Nullable"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"locationIdOrPath"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"False"}),(0,a.jsx)(t.td,{children:"The ID or path of the location associated with the inventory."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"lotIdOrName"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"False"}),(0,a.jsx)(t.td,{children:"The ID or name of the inventory lot associated with the inventory."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"materialIdOrPath"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"False"}),(0,a.jsx)(t.td,{children:"The ID or path of the material associated with the inventory's lot."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"quantity"})}),(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"String"})}),(0,a.jsx)(t.td,{children:"False"}),(0,a.jsx)(t.td,{children:"The quantity of inventory to store."})]})]})]}),"\n",(0,a.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(t.p,{children:"Returns a boolean indicating whether the location can accommodate the given quantity of inventory."}),"\n",(0,a.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# Check whether the location can store the given quantity of inventory\nhas_capacity = system.mes.inventory.checkLocationHasCapacity('DairyCo', '425e29ed-2780-430a-95cf-79431ec0e3e5', 'Bottle/Milk', 1454)\n\n# Output the boolean result\nprint(has_capacity)\n"})})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(96540);const a={},c=i.createContext(a);function s(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);