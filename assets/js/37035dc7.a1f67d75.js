"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[6503],{8227:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"appendix/script-api/unit-of-measure-script-api/does-conversion-exist","title":"doesConversionExist","description":"Checks if a unit of measure conversion with the given to and from unit of measures and the material ID exists.","source":"@site/docs/appendix/script-api/unit-of-measure-script-api/does-conversion-exist.md","sourceDirName":"appendix/script-api/unit-of-measure-script-api","slug":"/appendix/script-api/unit-of-measure-script-api/does-conversion-exist","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/does-conversion-exist","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/does-conversion-exist.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15,"title":"doesConversionExist","description":"Checks if a unit of measure conversion with the given to and from unit of measures and the material ID exists."},"sidebar":"tutorialSidebar","previous":{"title":"saveUnitOfMeasureConversion","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure-conversion"},"next":{"title":"findUnitOfMeasureConversions","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/find-unit-of-measure-conversions"}}');var n=t(74848),r=t(28453);const o={sidebar_position:15,title:"doesConversionExist",description:"Checks if a unit of measure conversion with the given to and from unit of measures and the material ID exists."},a="system.mes.unitOfMeasure.doesConversionExist",d={},c=[{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function u(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"systemmesunitofmeasuredoesconversionexist",children:"system.mes.unitOfMeasure.doesConversionExist"})}),"\n",(0,n.jsxs)(s.p,{children:["Checks if a ",(0,n.jsx)(s.a,{href:"../../data-model/utility-models/unit-of-measure-model/unit-of-measure-conversion",children:"Unit Of Measure Conversions"})," object with the given parameters exists."]}),"\n",(0,n.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"system.mes.unitOfMeasure.doesConversionExist(fromIdOrName, toIdOrName, materialId)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Parameter"}),(0,n.jsx)(s.th,{children:"Type"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"fromIdOrName"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"String"})}),(0,n.jsx)(s.td,{children:"The ULID or name of the from unit of measure to check."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"toIdOrName"})}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"String"})}),(0,n.jsx)(s.td,{children:"The ULID or name of the to unit of measure to check."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:(0,n.jsx)(s.code,{children:"materialId"})}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,n.jsx)(s.td,{children:"The ULID of the material associated with the conversion."})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,n.jsx)(s.p,{children:"Returns a boolean indicating whether the unit of measure conversion exists."}),"\n",(0,n.jsx)(s.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"# Check whether the unit of measure conversion exists\nuomc_exists = system.mes.unitOfMeasure.doesConversionExist('Pound', 'Kilogram', '01JCH3TP3Y-4B080WHN-MSR8RVP5')\n\n# Output the boolean result\nprint(uomc_exists)\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var i=t(96540);const n={},r=i.createContext(n);function o(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);