"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[7733],{6191:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>c});var s=r(4848),i=r(8453);const n={sidebar_position:2,title:"newLotHistoryRequest",description:"Creates a new empty LotHistoryRequest."},o="newLotHistoryRequest",d={id:"appendix/script-api/inventory-script-api/new-lot-history-request",title:"newLotHistoryRequest",description:"Creates a new empty LotHistoryRequest.",source:"@site/docs/appendix/script-api/inventory-script-api/new-lot-history-request.md",sourceDirName:"appendix/script-api/inventory-script-api",slug:"/appendix/script-api/inventory-script-api/new-lot-history-request",permalink:"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/new-lot-history-request",draft:!1,unlisted:!1,editUrl:"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/new-lot-history-request.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"newLotHistoryRequest",description:"Creates a new empty LotHistoryRequest."},sidebar:"tutorialSidebar",previous:{title:"getInventory",permalink:"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/get-inventory"},next:{title:"change-status",permalink:"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/change-status"}},a={},c=[{value:"Method Description",id:"method-description",level:2},{value:"Returns",id:"returns",level:2},{value:"Example Usage",id:"example-usage",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"newlothistoryrequest",children:"newLotHistoryRequest"})}),"\n",(0,s.jsx)(t.h2,{id:"method-description",children:"Method Description"}),"\n",(0,s.jsxs)(t.p,{children:["Creates a new empty LotHistoryRequest. This function returns a JSON/Dictionary representation of the new\nLotHistoryRequest. This allows users to see what fields are available and set the desired values before calling\n",(0,s.jsx)(t.code,{children:"getLotHistory"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:"A JSON/Dictionary representation of the new LotHistoryRequest."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Field Name"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"lotIdOrName"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The ID or name of the lot to retrieve history for."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"lotRecordType"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The type of lot record to retrieve. Possible values: CONSUME, PRODUCE, MOVE, SPLIT, MERGE, SCRAP, STATUS_CHANGE, EDIT, RECEIVE, SHIP."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"operationId"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The ID or name of the operation to filter by."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"orderIdOrName"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The ID or name of the order to filter by."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"materialReasonCodeId"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The ID of the material reason code to filter by."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"startDate"}),(0,s.jsx)(t.td,{children:"ISOString"}),(0,s.jsx)(t.td,{children:"The start date of the history. Only records created after this date will be returned."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"endDate"}),(0,s.jsx)(t.td,{children:"ISOString"}),(0,s.jsx)(t.td,{children:"The end date of the history. Only records created before this date will be returned."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"status"}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"The status of the lot record to filter by. Possible values: IDLE, RUNNING, COMPLETED, FAULTED, CANCELLED, UNKNOWN."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Create a new empty LotHistoryRequest\nrequest = system.mes.inventory.newLotHistoryRequest()\nrequest['orderIdOrName'] = \"Order123\"\nrequest['status'] = \"COMPLETED\"\nrequest['lotRecordType'] = \"PRODUCE\"\n\nhistory = system.mes.inventory.getLotHistory(**request)\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>d});var s=r(6540);const i={},n=s.createContext(i);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);