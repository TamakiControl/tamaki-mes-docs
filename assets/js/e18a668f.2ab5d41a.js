"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[4410],{57739:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>h,default:()=>o,frontMatter:()=>n,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"appendix/script-api/shift-script-api/save-shift","title":"saveShift","description":"Creates or updates a shift with specified parameters.","source":"@site/docs/appendix/script-api/shift-script-api/save-shift.md","sourceDirName":"appendix/script-api/shift-script-api","slug":"/appendix/script-api/shift-script-api/save-shift","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/save-shift","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/save-shift.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"title":"saveShift","description":"Creates or updates a shift with specified parameters."},"sidebar":"tutorialSidebar","previous":{"title":"getCurrentShift","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/get-current-shift"},"next":{"title":"validateShift","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/validate-shift"}}');var d=i(74848),r=i(28453);const n={sidebar_position:7,title:"saveShift",description:"Creates or updates a shift with specified parameters."},h="system.mes.shift.saveShift",c={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"systemmesshiftsaveshift",children:"system.mes.shift.saveShift"})}),"\n",(0,d.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,d.jsxs)(s.p,{children:["Creates or updates a ",(0,d.jsx)(s.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," record in the system based on the provided parameters."]}),"\n",(0,d.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:"system.mes.shift.saveShift(**shift_data)\n"})}),"\n",(0,d.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Parameter"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Nullable"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"locationId"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsx)(s.td,{children:"The ULID of the location where the shift runs."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"locationPath"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The path of the location where the shift runs. For display purposes."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"name"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsx)(s.td,{children:"The name of the shift."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"description"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"A detailed description of the shift."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"shiftScheduleName"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The name of the schedule that defines this shift's timings (when using schedule-based timing)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"shiftScheduleSource"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (Enum)"]}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsxs)(s.td,{children:["The source of timing (e.g., ",(0,d.jsx)(s.code,{children:"IGNITION_SCHEDULE"}),", ",(0,d.jsx)(s.code,{children:"IGNITION_EXPRESSION"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"currentRecordId"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The current shift record id for the shift (if any)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"runningConflictStrategy"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (Enum)"]}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsxs)(s.td,{children:["Strategy when a new shift starts while another is running (e.g., ",(0,d.jsx)(s.code,{children:"STOP_PREVIOUS"}),", ",(0,d.jsx)(s.code,{children:"THROW_EXCEPTION"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"startTriggerExpression"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The expression used to determine when the shift should start."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"startTriggerType"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (Enum)"]}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsxs)(s.td,{children:["The trigger mechanism used to start the shift (e.g., ",(0,d.jsx)(s.code,{children:"RISING_EDGE"}),", ",(0,d.jsx)(s.code,{children:"FALLING_EDGE"}),", ",(0,d.jsx)(s.code,{children:"CHANGE"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"stopTriggerExpression"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The expression used to determine when the shift should end."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"stopTriggerType"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (Enum)"]}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsxs)(s.td,{children:["The trigger mechanism used to end the shift (e.g., ",(0,d.jsx)(s.code,{children:"RISING_EDGE"}),", ",(0,d.jsx)(s.code,{children:"FALLING_EDGE"}),", ",(0,d.jsx)(s.code,{children:"CHANGE"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"id"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The ULID of the shift (optional, used for updating an existing shift)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"notes"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Notes related to the shift."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"enabled"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Boolean"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsxs)(s.td,{children:["Indicates if the shift is active and enabled. Default value is ",(0,d.jsx)(s.code,{children:"true"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spare1"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Additional field for user-defined context."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spare2"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Additional field for user-defined context."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spare3"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(s.p,{children:"Returns a JSON representation of the saved shift."}),"\n",(0,d.jsx)(s.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-python",children:"# Create a new shift and save it\nshift = system.mes.shift.newShift()\nshift['locationId'] = '01JAP8RJBN-8ZTPXSGY-J9GSDPE1'\nshift['name'] = 'Morning Shift'\nshift['shiftScheduleName'] = 'Weekday Schedule'\nshift['shiftScheduleSource'] = 'IGNITION_SCHEDULE'\nshift['startTriggerType'] = 'RISING_EDGE'\nshift['stopTriggerType'] = 'FALLING_EDGE'\n\nsaved = system.mes.shift.saveShift(**shift)\nprint(saved)\n\n# Update an existing shift\nshift2 = system.mes.shift.newShift()\nshift2['id'] = saved.id\nshift2['locationId'] = '01JAP8RJBN-8ZTPXSGY-J9GSDPE1'\nshift2['name'] = 'Morning Shift'\nshift2['shiftScheduleName'] = 'Weekday Schedule'\nshift2['shiftScheduleSource'] = 'IGNITION_SCHEDULE'\nshift2['startTriggerType'] = 'RISING_EDGE'\nshift2['stopTriggerType'] = 'FALLING_EDGE'\nshift2['description'] = 'Updated description'\n\nupdated = system.mes.shift.saveShift(**shift2)\nprint(updated)\n"})})]})}function o(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>n,x:()=>h});var t=i(96540);const d={},r=t.createContext(d);function n(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function h(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:n(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);