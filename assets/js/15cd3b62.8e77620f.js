"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[5328],{12424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"appendix/script-api/inventory-script-api/execute-inventory-actions","title":"executeInventoryActions","description":"Executes a list of inventory actions in a single transaction. That means that if any of the actions fail, none of them will be executed, and any changes made to the database will be rolled back.","source":"@site/docs/appendix/script-api/inventory-script-api/execute-inventory-actions.md","sourceDirName":"appendix/script-api/inventory-script-api","slug":"/appendix/script-api/inventory-script-api/execute-inventory-actions","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/execute-inventory-actions","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/execute-inventory-actions.md","tags":[],"version":"current","sidebarPosition":39,"frontMatter":{"sidebar_position":39,"title":"executeInventoryActions","description":"Executes a list of inventory actions in a single transaction. That means that if any of the actions fail, none of them will be executed, and any changes made to the database will be rolled back."},"sidebar":"tutorialSidebar","previous":{"title":"validateShipRequest","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/validate-ship-request"},"next":{"title":"setInventoryMetadata","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/set-inventory-metadata"}}');var s=n(74848),a=n(28453);const r={sidebar_position:39,title:"executeInventoryActions",description:"Executes a list of inventory actions in a single transaction. That means that if any of the actions fail, none of them will be executed, and any changes made to the database will be rolled back."},o="system.mes.inventory.executeInventoryActions",c={},d=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"systemmesinventoryexecuteinventoryactions",children:"system.mes.inventory.executeInventoryActions"})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.p,{children:"Executes a list of inventory actions in a single transaction. That means that if any of the actions fail,\nnone of them will be executed, and any changes made to the database will be rolled back."}),"\n",(0,s.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"system.mes.inventory.executeInventoryActions(**{'requests':[records]})\n"})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Nullable"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"requests"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"List<Requests>"})}),(0,s.jsx)(t.td,{children:"False"}),(0,s.jsx)(t.td,{children:"List of inventory actions to be executed. They would be in the format of a new request."})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:"Returns a list of JSON representation of inventory lot records for the inventory actions executed."}),"\n",(0,s.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Generate the object structure for a new receive request object with no initial arguments\nreceive_request = system.mes.inventory.newReceiveRequest()\n\n# Set basic attributes for the new receive request\nreceive_request['materialIdOrPath'] = 'Bottle/Milk'\nreceive_request['destinationLocationIdOrPath'] = 'DairyCo'\nreceive_request['quantity'] = 610\n# (You can continue setting other properties as needed here)\n\n# Generate the object structure for a new consume request object with no initial arguments\nconsume_request = system.mes.inventory.newConsumeRequest()\n\n# Set basic attributes for the new consume request\nconsume_request['materialIdOrPath'] = 'Bottle/Milk'\nconsume_request['sourceLocationIdOrPath'] = 'DairyCo'\nconsume_request['quantity'] = 610\n# (You can continue setting other properties as needed here)\n\n# Build the request as a dictionary\ninventory_actions_request = {\n    'requests' : [receive_request, consume_request]\n}\n\n# Execute the inventory actions\nsystem.mes.inventory.executeInventoryActions(**inventory_actions_request)\n"})})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(96540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);