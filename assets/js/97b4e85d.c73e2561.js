"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[91097],{66009:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>h,metadata:()=>s,toc:()=>n});const s=JSON.parse('{"id":"appendix/script-api/shift-script-api/intro","title":"Introduction to Shift Script API","description":"Overview of functions available in the Shift Script API.","source":"@site/docs/appendix/script-api/shift-script-api/intro.md","sourceDirName":"appendix/script-api/shift-script-api","slug":"/appendix/script-api/shift-script-api/intro","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Introduction to Shift Script API","description":"Overview of functions available in the Shift Script API."},"sidebar":"tutorialSidebar","previous":{"title":"getSchedulePermissions","permalink":"/tamaki-mes-docs/docs/appendix/script-api/schedule-script-api/get-schedule-permissions"},"next":{"title":"getShiftPermissions","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/get-shift-permissions"}}');var r=i(74848),d=i(28453);const h={sidebar_position:1,title:"Introduction to Shift Script API",description:"Overview of functions available in the Shift Script API."},c="Shift Script API",o={},n=[{value:"Function List",id:"function-list",level:2},{value:"<code>newShift</code>",id:"newshift",level:3},{value:"<code>getShift</code>",id:"getshift",level:3},{value:"<code>getAllShifts</code>",id:"getallshifts",level:3},{value:"<code>getShiftsByLocation</code>",id:"getshiftsbylocation",level:3},{value:"<code>getCurrentShift</code>",id:"getcurrentshift",level:3},{value:"<code>saveShift</code>",id:"saveshift",level:3},{value:"<code>validateShift</code>",id:"validateshift",level:3},{value:"<code>deleteShift</code>",id:"deleteshift",level:3},{value:"<code>getShiftReferences</code>",id:"getshiftreferences",level:3},{value:"<code>getShiftStatus</code>",id:"getshiftstatus",level:3},{value:"<code>startShift</code>",id:"startshift",level:3},{value:"<code>stopShift</code>",id:"stopshift",level:3},{value:"<code>newShiftRecord</code>",id:"newshiftrecord",level:3},{value:"<code>getShiftRecord</code>",id:"getshiftrecord",level:3},{value:"<code>getCurrentShiftRecord</code>",id:"getcurrentshiftrecord",level:3},{value:"<code>getShiftRecords</code>",id:"getshiftrecords",level:3},{value:"<code>saveShiftRecord</code>",id:"saveshiftrecord",level:3},{value:"<code>validateShiftRecord</code>",id:"validateshiftrecord",level:3},{value:"<code>deleteShiftRecord</code>",id:"deleteshiftrecord",level:3},{value:"<code>getShiftRecordStatus</code>",id:"getshiftrecordstatus",level:3},{value:"<code>reloadStateFromDB</code>",id:"reloadstatefromdb",level:3}];function a(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"shift-script-api",children:"Shift Script API"})}),"\n",(0,r.jsx)(t.p,{children:"Welcome to the Shift Script API documentation. This API provides functions to manage shift definitions (Shifts) and their runtime records, as well as utilities to start/stop shifts and query current status."}),"\n",(0,r.jsx)(t.h2,{id:"function-list",children:"Function List"}),"\n",(0,r.jsx)(t.h3,{id:"newshift",children:(0,r.jsx)(t.a,{href:"./new-shift",children:(0,r.jsx)(t.code,{children:"newShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Creates an empty non-persisted ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," object to provide the structure required by the API to save a new record."]}),"\n",(0,r.jsx)(t.h3,{id:"getshift",children:(0,r.jsx)(t.a,{href:"./get-shift",children:(0,r.jsx)(t.code,{children:"getShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," record by its ID, or by ",(0,r.jsx)(t.code,{children:"locationIdOrPath"})," and ",(0,r.jsx)(t.code,{children:"name"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"getallshifts",children:(0,r.jsx)(t.a,{href:"./get-all-shifts",children:(0,r.jsx)(t.code,{children:"getAllShifts"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves all ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," records in the system."]}),"\n",(0,r.jsx)(t.h3,{id:"getshiftsbylocation",children:(0,r.jsx)(t.a,{href:"./get-shifts-by-location",children:(0,r.jsx)(t.code,{children:"getShiftsByLocation"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves all ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," for the specified location."]}),"\n",(0,r.jsx)(t.h3,{id:"getcurrentshift",children:(0,r.jsx)(t.a,{href:"./get-current-shift",children:(0,r.jsx)(t.code,{children:"getCurrentShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Gets the current ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," at a location, optionally at a specified timestamp."]}),"\n",(0,r.jsx)(t.h3,{id:"saveshift",children:(0,r.jsx)(t.a,{href:"./save-shift",children:(0,r.jsx)(t.code,{children:"saveShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Creates or updates a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," record in the system."]}),"\n",(0,r.jsx)(t.h3,{id:"validateshift",children:(0,r.jsx)(t.a,{href:"./validate-shift",children:(0,r.jsx)(t.code,{children:"validateShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Validates a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," record and returns any validation errors."]}),"\n",(0,r.jsx)(t.h3,{id:"deleteshift",children:(0,r.jsx)(t.a,{href:"./delete-shift",children:(0,r.jsx)(t.code,{children:"deleteShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Deletes a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," record by its ID."]}),"\n",(0,r.jsx)(t.h3,{id:"getshiftreferences",children:(0,r.jsx)(t.a,{href:"./get-shift-references",children:(0,r.jsx)(t.code,{children:"getShiftReferences"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves a list of references to a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"})," record by its ID."]}),"\n",(0,r.jsx)(t.h3,{id:"getshiftstatus",children:(0,r.jsx)(t.a,{href:"./get-shift-status",children:(0,r.jsx)(t.code,{children:"getShiftStatus"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves the status of a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift",children:"Shifts"}),", based on its most recent record."]}),"\n",(0,r.jsx)(t.h3,{id:"startshift",children:(0,r.jsx)(t.a,{href:"./start-shift",children:(0,r.jsx)(t.code,{children:"startShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Starts a shift, either by shift ID or by ",(0,r.jsx)(t.code,{children:"locationIdOrPath"})," and ",(0,r.jsx)(t.code,{children:"name"}),"; returns the created ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," object."]}),"\n",(0,r.jsx)(t.h3,{id:"stopshift",children:(0,r.jsx)(t.a,{href:"./stop-shift",children:(0,r.jsx)(t.code,{children:"stopShift"})})}),"\n",(0,r.jsxs)(t.p,{children:["Stops a shift, either by shift ID or by ",(0,r.jsx)(t.code,{children:"locationIdOrPath"})," and ",(0,r.jsx)(t.code,{children:"name"}),"; returns the updated ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," object."]}),"\n",(0,r.jsx)(t.h3,{id:"newshiftrecord",children:(0,r.jsx)(t.a,{href:"./new-shift-record",children:(0,r.jsx)(t.code,{children:"newShiftRecord"})})}),"\n",(0,r.jsxs)(t.p,{children:["Creates an empty non-persisted ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," object to provide the structure required by the API to save a new record."]}),"\n",(0,r.jsx)(t.h3,{id:"getshiftrecord",children:(0,r.jsx)(t.a,{href:"./get-shift-record",children:(0,r.jsx)(t.code,{children:"getShiftRecord"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," record by its ID."]}),"\n",(0,r.jsx)(t.h3,{id:"getcurrentshiftrecord",children:(0,r.jsx)(t.a,{href:"./get-current-shift-record",children:(0,r.jsx)(t.code,{children:"getCurrentShiftRecord"})})}),"\n",(0,r.jsxs)(t.p,{children:["Gets the current ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," at a location, optionally at a specified timestamp."]}),"\n",(0,r.jsx)(t.h3,{id:"getshiftrecords",children:(0,r.jsx)(t.a,{href:"./get-shift-records",children:(0,r.jsx)(t.code,{children:"getShiftRecords"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves all ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," for a location within a time range."]}),"\n",(0,r.jsx)(t.h3,{id:"saveshiftrecord",children:(0,r.jsx)(t.a,{href:"./save-shift-record",children:(0,r.jsx)(t.code,{children:"saveShiftRecord"})})}),"\n",(0,r.jsxs)(t.p,{children:["Creates or updates a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," in the system."]}),"\n",(0,r.jsx)(t.h3,{id:"validateshiftrecord",children:(0,r.jsx)(t.a,{href:"./validate-shift-record",children:(0,r.jsx)(t.code,{children:"validateShiftRecord"})})}),"\n",(0,r.jsxs)(t.p,{children:["Validates a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," record and returns any validation errors."]}),"\n",(0,r.jsx)(t.h3,{id:"deleteshiftrecord",children:(0,r.jsx)(t.a,{href:"./delete-shift-record",children:(0,r.jsx)(t.code,{children:"deleteShiftRecord"})})}),"\n",(0,r.jsxs)(t.p,{children:["Deletes a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," record by its ID."]}),"\n",(0,r.jsx)(t.h3,{id:"getshiftrecordstatus",children:(0,r.jsx)(t.a,{href:"./get-shift-record-status",children:(0,r.jsx)(t.code,{children:"getShiftRecordStatus"})})}),"\n",(0,r.jsxs)(t.p,{children:["Retrieves the status of a ",(0,r.jsx)(t.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"reloadstatefromdb",children:(0,r.jsx)(t.a,{href:"./reload-state-from-db",children:(0,r.jsx)(t.code,{children:"reloadStateFromDB"})})}),"\n",(0,r.jsx)(t.p,{children:"Reloads the Shift state from the database (re-reads trigger expressions)."})]})}function l(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>h,x:()=>c});var s=i(96540);const r={},d=s.createContext(r);function h(e){const t=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:h(e.components),s.createElement(d.Provider,{value:t},e.children)}}}]);