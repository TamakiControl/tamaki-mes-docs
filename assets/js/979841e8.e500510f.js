"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[11830],{29388:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"appendix/script-api/personnel-script-api/save-person","title":"savePerson","description":"Creates or updates a person with specified parameters.","source":"@site/docs/appendix/script-api/personnel-script-api/save-person.md","sourceDirName":"appendix/script-api/personnel-script-api","slug":"/appendix/script-api/personnel-script-api/save-person","permalink":"/tamaki-mes-docs/docs/appendix/script-api/personnel-script-api/save-person","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/personnel-script-api/save-person.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"savePerson","description":"Creates or updates a person with specified parameters."},"sidebar":"tutorialSidebar","previous":{"title":"saveDepartment","permalink":"/tamaki-mes-docs/docs/appendix/script-api/personnel-script-api/save-department"},"next":{"title":"findPeople","permalink":"/tamaki-mes-docs/docs/appendix/script-api/personnel-script-api/find-people"}}');var d=r(74848),t=r(28453);const i={sidebar_position:4,title:"savePerson",description:"Creates or updates a person with specified parameters."},c="system.mes.personnel.savePerson",l={},o=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"systemmespersonnelsaveperson",children:"system.mes.personnel.savePerson"})}),"\n",(0,d.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,d.jsxs)(s.p,{children:["Creates or updates a ",(0,d.jsx)(s.a,{href:"../../data-model/personnel-model/personnel",children:"Person"})," record in the system based on the provided parameters."]}),"\n",(0,d.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{children:"system.mes.personnel.savePerson(**person_data)\n"})}),"\n",(0,d.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Parameter"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Nullable"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"departmentId"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The ULID of the department this person is assigned to."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"departmentName"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The name of the department."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"departmentPath"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The path of the department."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"personStatus"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (Enum)"]}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsxs)(s.td,{children:["The status of the person (",(0,d.jsx)(s.code,{children:"ACTIVE"})," or ",(0,d.jsx)(s.code,{children:"INACTIVE"}),"). Default Value is ",(0,d.jsx)(s.code,{children:"ACTIVE"})]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"firstName"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsx)(s.td,{children:"The first name of the person."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"lastName"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsx)(s.td,{children:"The last name of the person."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"initials"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The initials of the person."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"username"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"False"}),(0,d.jsx)(s.td,{children:"The username of the person."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"id"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"The ULID of the person (optional, used for updating an existing person)."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"notes"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Notes related to the person."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"enabled"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Boolean"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Indicates if the person is active and enabled."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spare1"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Additional field for user-defined context."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spare2"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Additional field for user-defined context."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"spare3"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"String"})}),(0,d.jsx)(s.td,{children:"True"}),(0,d.jsx)(s.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,d.jsx)(s.p,{children:"Returns a JSON representation of the saved person."}),"\n",(0,d.jsx)(s.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{children:"# Generate the object structure for a new person object, set the initial arguments and save it\nperson = system.mes.personnel.newPerson()\nperson['firstName'] = 'John'\nperson['lastName'] = 'Doe'\nperson['username'] = 'jdoe'\nperson['departmentId'] = '01JAP8R5RT-3FPXQABY-7KQZT6VF'\nsavedPerson = system.mes.personnel.savePerson(**person)\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>c});var n=r(96540);const d={},t=n.createContext(d);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);