"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[6163],{31047:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"appendix/script-api/inventory-operation-script-api/update-inventory-operation-states-from-database","title":"updateInventoryOperationStatesFromDatabase","description":"Updates the current inventory operation state from the database.","source":"@site/docs/appendix/script-api/inventory-operation-script-api/update-inventory-operation-states-from-database.md","sourceDirName":"appendix/script-api/inventory-operation-script-api","slug":"/appendix/script-api/inventory-operation-script-api/update-inventory-operation-states-from-database","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/update-inventory-operation-states-from-database","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/update-inventory-operation-states-from-database.md","tags":[],"version":"current","sidebarPosition":16,"frontMatter":{"sidebar_position":16,"title":"updateInventoryOperationStatesFromDatabase","description":"Updates the current inventory operation state from the database."},"sidebar":"tutorialSidebar","previous":{"title":"cancelInventoryOperation","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/cancel-inventory-operation"},"next":{"title":"Introduction to Inventory Script API","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/intro"}}');var a=n(74848),s=n(28453);const i={sidebar_position:16,title:"updateInventoryOperationStatesFromDatabase",description:"Updates the current inventory operation state from the database."},o="system.mes.inventory.operation.updateInventoryOperationStatesFromDatabase",d={},p=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"systemmesinventoryoperationupdateinventoryoperationstatesfromdatabase",children:"system.mes.inventory.operation.updateInventoryOperationStatesFromDatabase"})}),"\n",(0,a.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"No Parameter:"})," Updates the states of all the ",(0,a.jsx)(t.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," from the database."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"With a Parameter:"})," Updates the states of only the specified ",(0,a.jsx)(t.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," from the database given\nthe ID of the inventory operations."]}),"\n",(0,a.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"system.mes.inventory.operation.updateInventoryOperationStatesFromDatabase()\nsystem.mes.inventory.operation.updateInventoryOperationStatesFromDatabase([inventoryOperationIds])\n"})}),"\n",(0,a.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"No Parameter:"})}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"None"}),(0,a.jsx)(t.td,{children:"-"}),(0,a.jsx)(t.td,{children:"This method does not take any parameters."})]})})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.strong,{children:"With a Parameter:"})}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Parameter"}),(0,a.jsx)(t.th,{children:"Type"}),(0,a.jsx)(t.th,{children:"Description"})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"inventoryOperationIds"})}),(0,a.jsxs)(t.td,{children:[(0,a.jsx)(t.code,{children:"List<String>"})," (ULID)"]}),(0,a.jsx)(t.td,{children:"List of IDs of the inventory operations."})]})})]}),"\n",(0,a.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(t.p,{children:"If successful, no response is returned."}),"\n",(0,a.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:"# Update the state of the inventory operations from the database\nsystem.mes.inventory.operation.updateInventoryOperationStatesFromDatabase(['01JPAND53P-BZ61RZHZ-V7C6EEHG', '01JPBE5NX5-WZRBXRT7-WRXGEPT5'])\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(96540);const a={},s=r.createContext(a);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);