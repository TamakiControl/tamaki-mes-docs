"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[20181],{65891:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"perspective-project/perspective-components/downtime-reason-tree","title":"Downtime Reason Tree","description":"Overview","source":"@site/docs/perspective-project/perspective-components/downtime-reason-tree.md","sourceDirName":"perspective-project/perspective-components","slug":"/perspective-project/perspective-components/downtime-reason-tree","permalink":"/tamaki-mes-docs/docs/perspective-project/perspective-components/downtime-reason-tree","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/perspective-project/perspective-components/downtime-reason-tree.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"sidebar_label":"Downtime Reason Tree","title":"Downtime Reason Tree"},"sidebar":"tutorialSidebar","previous":{"title":"Inventory TraceGraph","permalink":"/tamaki-mes-docs/docs/perspective-project/perspective-components/inventory-tracegraph"},"next":{"title":"Location Tree","permalink":"/tamaki-mes-docs/docs/perspective-project/perspective-components/location-tree"}}');var r=s(74848),i=s(28453);const o={sidebar_position:5,sidebar_label:"Downtime Reason Tree",title:"Downtime Reason Tree"},d=void 0,c={},l=[{value:"Overview",id:"overview",level:2},{value:"Props",id:"props",level:2},{value:"Events",id:"events",level:2}];function h(e){const t={code:"code",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(t.p,{children:"The Downtime Reason Tree component is a custom Perspective component that provides a hierarchical tree view of downtime reasons. It allows users to easily navigate and select downtime reasons from a structured list, making it possible to categorize and analyze downtime events. Unlike the other trees, this component can be passed a locationId to filter the reasons shown based on the location."}),"\n",(0,r.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)(t.p,{children:"The Downtime Reason Tree component has the following props:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Prop Name"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Input/Output"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"showSearch"})}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{children:"If true, shows a search box at the top of the tree to filter reasons."}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"selectedItem"})}),(0,r.jsx)(t.td,{children:"object"}),(0,r.jsxs)(t.td,{children:["The currently selected item in the tree. Contains the properties ",(0,r.jsx)(t.code,{children:"code"})," (number), ",(0,r.jsx)(t.code,{children:"notes"})," (string), ",(0,r.jsx)(t.code,{children:"description"})," (string), ",(0,r.jsx)(t.code,{children:"parentId"})," (string), ",(0,r.jsx)(t.code,{children:"enabled"})," (boolean), ",(0,r.jsx)(t.code,{children:"path"})," (string), ",(0,r.jsx)(t.code,{children:"locationId"})," (string), ",(0,r.jsx)(t.code,{children:"name"})," (string), ",(0,r.jsx)(t.code,{children:"id"})," (string), ",(0,r.jsx)(t.code,{children:"locationPath"})," (string)"]}),(0,r.jsx)(t.td,{children:"Output"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"currentItemId"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"The ID of the item most recently clicked on. This is useful for tracking user interaction with the tree."}),(0,r.jsx)(t.td,{children:"Output"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"forceRefresh"})}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{children:"If true, forces the tree to refresh its data from the server. Automatically resets to false after 500ms."}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"allowEdit"})}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{children:"If true, allows the user to edit the tree (add, edit, delete, cut, paste, etc.)."}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"locationId"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"If set, filters the reasons shown in the tree to only those associated with the specified location."}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"rootPath"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:"If set, only shows reasons that are descendants of the specified reason path."}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"hideItems"})}),(0,r.jsx)(t.td,{children:"array[string]"}),(0,r.jsx)(t.td,{children:"An array of reason IDs to hide from the tree. Also hides their children."}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"showImport"})}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{children:'If true, shows an "Import" button to allow importing reasons from a CSV or JSON file.'}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"showExport"})}),(0,r.jsx)(t.td,{children:"boolean"}),(0,r.jsx)(t.td,{children:'If true, shows an "Export" button in the context menu to allow exporting reasons to a CSV or JSON file.'}),(0,r.jsx)(t.td,{children:"Input"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"importTooltip"})}),(0,r.jsx)(t.td,{children:"string"}),(0,r.jsx)(t.td,{children:'The tooltip text to show when hovering over the "Import" button.'}),(0,r.jsx)(t.td,{children:"Input"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,r.jsx)(t.p,{children:"The Downtime Reason Tree component emits the following events:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Event Name"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Payload"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"onAdd"})}),(0,r.jsx)(t.td,{children:"Emitted when the user adds a new reason."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ currentItemId: string, locationId: string }"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"onDelete"})}),(0,r.jsx)(t.td,{children:"Emitted when the user deletes a reason."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ currentItemId: string }"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"onImport"})}),(0,r.jsx)(t.td,{children:"Emitted when the user imports downtime reasons."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"None"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"onExport"})}),(0,r.jsx)(t.td,{children:"Emitted when the user exports downtime reasons."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"{ currentItemId: string}"})})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>d});var n=s(96540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);