"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[5627],{85425:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"appendix/script-api/unit-of-measure-script-api/save-unit-of-measure","title":"saveUnitOfMeasure","description":"Creates or updates a unit of measure with specified parameters.","source":"@site/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure.md","sourceDirName":"appendix/script-api/unit-of-measure-script-api","slug":"/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"saveUnitOfMeasure","description":"Creates or updates a unit of measure with specified parameters."},"sidebar":"tutorialSidebar","previous":{"title":"newUnitOfMeasure","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/new-unit-of-measure"},"next":{"title":"doesUnitOfMeasureExist","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/does-unit-of-measure-exist"}}');var i=s(74848),r=s(28453);const a={sidebar_position:3,title:"saveUnitOfMeasure",description:"Creates or updates a unit of measure with specified parameters."},d="system.mes.unitOfMeasure.saveUnitOfMeasure",o={},u=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"systemmesunitofmeasuresaveunitofmeasure",children:"system.mes.unitOfMeasure.saveUnitOfMeasure"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["Creates or updates a ",(0,i.jsx)(t.a,{href:"../../data-model/utility-models/unit-of-measure-model/unit-of-measure",children:"Units Of Measure"})," record in the system based on the provided parameters."]}),"\n",(0,i.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"system.mes.unitOfMeasure.saveUnitOfMeasure(**uom_data)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"name"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"The name of the unit of measure."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"symbol"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"The symbol of the unit of measure."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"id"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"The ULID of the unit of measure (optional, used for updating an existing unit of measure)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"notes"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"Notes related to the unit of measure."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Boolean"})}),(0,i.jsx)(t.td,{children:"Indicates if the unit of measure is active and enabled."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"spare1"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"spare2"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"spare3"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:"Returns a JSON representation of the saved unit of measure."}),"\n",(0,i.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Generate the object structure for a new unit of measure object, set the parameters and save it\nnew_uom = system.mes.unitOfMeasure.newUnitOfMeasure()\nnew_uom['name'] = 'Pound'\nnew_uom['symbol'] = 'lb'\nsaved_uom = system.mes.unitOfMeasure.saveUnitOfMeasure(**new_uom)\n\n# Output the JSON representation of the saved unit of measure\nprint(saved_uom)\n\n# Generate the object structure for another new unit of measure object to update the previous unit of measure\nuom_data = system.mes.unitOfMeasure.newUnitOfMeasure()\n\n# Set basic attributes for the updated unit of measure\nuom_data['id'] = saved_uom.id\nuom_data['name'] = 'Pound'\nuom_data['symbol'] = 'lb'\nuom_data['notes'] = 'The weight'\n# (You can continue setting other properties as needed here)\n\n# Save the unit of measure to update it in the system\nupdated_uom = system.mes.unitOfMeasure.saveUnitOfMeasure(**uom_data)\n\n# Output the JSON representation of the updated unit of measure\nprint(updated_uom)\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>d});var n=s(96540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);