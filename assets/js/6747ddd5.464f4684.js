"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[51996],{94459:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>n,metadata:()=>d,toc:()=>h});const d=JSON.parse('{"id":"appendix/script-api/shift-script-api/save-shift-record","title":"saveShiftRecord","description":"Creates or updates a shift record with specified parameters.","source":"@site/docs/appendix/script-api/shift-script-api/save-shift-record.md","sourceDirName":"appendix/script-api/shift-script-api","slug":"/appendix/script-api/shift-script-api/save-shift-record","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/save-shift-record","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/save-shift-record.md","tags":[],"version":"current","sidebarPosition":18,"frontMatter":{"sidebar_position":18,"title":"saveShiftRecord","description":"Creates or updates a shift record with specified parameters."},"sidebar":"tutorialSidebar","previous":{"title":"getShiftRecords","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/get-shift-records"},"next":{"title":"validateShiftRecord","permalink":"/tamaki-mes-docs/docs/appendix/script-api/shift-script-api/validate-shift-record"}}');var r=t(74848),i=t(28453);const n={sidebar_position:18,title:"saveShiftRecord",description:"Creates or updates a shift record with specified parameters."},c="system.mes.shift.saveShiftRecord",a={},h=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"systemmesshiftsaveshiftrecord",children:"system.mes.shift.saveShiftRecord"})}),"\n",(0,r.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(s.p,{children:["Creates or updates a ",(0,r.jsx)(s.a,{href:"../../data-model/shift-model/shift-record",children:"Shift Records"})," in the system\nbased on the provided parameters."]}),"\n",(0,r.jsx)(s.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"system.mes.shift.saveShiftRecord(**record_data)\n"})}),"\n",(0,r.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Parameter"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Nullable"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"locationId"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(s.td,{children:"False"}),(0,r.jsx)(s.td,{children:"The ULID of the location where the shift runs."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"shiftId"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(s.td,{children:"False"}),(0,r.jsx)(s.td,{children:"The ULID of the shift configuration this record belongs to."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"startDate"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"DateTime"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"Actual start date/time when the shift began."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"endDate"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"DateTime"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"Actual end date/time when the shift ended."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"status"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"String"})," (Enum)"]}),(0,r.jsx)(s.td,{children:"False"}),(0,r.jsxs)(s.td,{children:["Current status (",(0,r.jsx)(s.code,{children:"IDLE"}),", ",(0,r.jsx)(s.code,{children:"ACTIVE"}),", ",(0,r.jsx)(s.code,{children:"CLOSED"}),", ",(0,r.jsx)(s.code,{children:"VERIFIED"}),")."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"id"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"The ULID of the shift record (optional, used for updates)."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"notes"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"String"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"Notes related to the record."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"enabled"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"Boolean"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsxs)(s.td,{children:["Indicates if the record is active and enabled. Default ",(0,r.jsx)(s.code,{children:"true"}),"."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"spare1"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"String"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"Additional field for user-defined context."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"spare2"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"String"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"Additional field for user-defined context."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"spare3"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"String"})}),(0,r.jsx)(s.td,{children:"True"}),(0,r.jsx)(s.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:"Returns a JSON representation of the saved shift record."}),"\n",(0,r.jsx)(s.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# Create a new record (typically use startShift instead)\nrec = system.mes.shift.newShiftRecord()\nrec['shiftId'] = '01JAP8RJBN-8ZTPXSGY-J9GSDPE1'\nrec['locationId'] = '01JAP8RJBN-8ZTPXSGY-J9GSDPE1'\nrec['status'] = 'ACTIVE'\n\nsaved = system.mes.shift.saveShiftRecord(**rec)\nprint(saved)\n\n# Update an existing record\nrec2 = system.mes.shift.newShiftRecord()\nrec2['id'] = saved.id\nrec2['status'] = 'CLOSED'\n\nupdated = system.mes.shift.saveShiftRecord(**rec2)\nprint(updated)\n"})})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>n,x:()=>c});var d=t(96540);const r={},i=d.createContext(r);function n(e){const s=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),d.createElement(i.Provider,{value:s},e.children)}}}]);