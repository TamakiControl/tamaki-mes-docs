"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[1502],{26901:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>a,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"appendix/script-api/inventory-operation-script-api/validate-inventory-operation","title":"validateInventoryOperation","description":"Validates the specified parameters for an inventory operation.","source":"@site/docs/appendix/script-api/inventory-operation-script-api/validate-inventory-operation.md","sourceDirName":"appendix/script-api/inventory-operation-script-api","slug":"/appendix/script-api/inventory-operation-script-api/validate-inventory-operation","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/validate-inventory-operation","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/validate-inventory-operation.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9,"title":"validateInventoryOperation","description":"Validates the specified parameters for an inventory operation."},"sidebar":"tutorialSidebar","previous":{"title":"getInventoryOperationStatus","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/get-inventory-operation-status"},"next":{"title":"deleteInventoryOperation","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/delete-inventory-operation"}}');var i=r(74848),d=r(28453);const s={sidebar_position:9,title:"validateInventoryOperation",description:"Validates the specified parameters for an inventory operation."},o="system.mes.inventory.operation.validateInventoryOperation",c={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"systemmesinventoryoperationvalidateinventoryoperation",children:"system.mes.inventory.operation.validateInventoryOperation"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["Validates the specified parameters for an ",(0,i.jsx)(t.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," record and returns any validation errors.\nThis only checks if the inventory operation object can be saved based on the attributes given."]}),"\n",(0,i.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"system.mes.inventory.operation.validateInventoryOperation(**inventory_operation_data)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Nullable"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"operationId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the operation associated with this inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"operationName"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The name of the operation associated with this inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"name"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The name of the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"status"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The status of the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"currentRecordId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the current inventory lot record associated with this inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"operationType"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The type of operation record for this inventory operation. Default value is ",(0,i.jsx)(t.code,{children:"CONSUME"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"triggerSource"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The ways that the various inventory operations can trigger. Default value is ",(0,i.jsx)(t.code,{children:"EXPRESSION"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"startTriggerExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression to trigger the start of the transfer of materials."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"startTriggerType"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The trigger type when starting the transfer of materials."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"stopTriggerExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression to trigger the end of the transfer of materials."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"stopTriggerType"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The trigger type when stopping the transfer of materials."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"sourceLocationId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the location for movement source."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"sourceLocationPath"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The path of the location for movement source."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"destinationLocationId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the location for movement destination."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"destinationLocationPath"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The path of the location for movement destination."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"materialSource"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The strategy used for resolving material ID for an operation. Default value is ",(0,i.jsx)(t.code,{children:"STATIC"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"materialId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the material associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"materialPath"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The path of the material associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"materialExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression for the material associated with this inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"primaryLotResolutionStrategy"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The resolution strategy to get the primary lot code. Default value is ",(0,i.jsx)(t.code,{children:"AUTO_GENERATE"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"secondaryLotResolutionStrategy"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The resolution strategy to get the secondary lot code. Default value is ",(0,i.jsx)(t.code,{children:"AUTO_GENERATE"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"primaryLotCodeExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression to specify the primary lot code."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"secondaryLotCodeExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression to specify the secondary lot code."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"createLotIfNotFound"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Boolean"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Indicates if a lot should be created if it doesn't exist. Only used if operationType is CONSUME."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"inventoryNameResolutionStrategy"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The resolution strategy to get the inventory name. Default value is ",(0,i.jsx)(t.code,{children:"MANUAL"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"inventoryName"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The name of the inventory associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"inventoryNameExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression to specify the inventory name."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"quantitySource"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The source of the quantity of an inventory operation. Default value is ",(0,i.jsx)(t.code,{children:"EXPRESSION"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"quantityExpression"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The Ignition expression to specify the quantity."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"quantityCalcType"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The calculation type for quantity. Only used if quantitySource is ",(0,i.jsx)(t.code,{children:"EXPRESSION"}),". Default value is ",(0,i.jsx)(t.code,{children:"DELTA"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"quantityOverflowValue"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The overflow value for the quantity. Only used if quantitySource is EXPRESSION and the quantityCalcType is DELTA."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"unitOfMeasureId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the unit of measure associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"unitOfMeasureName"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The name of the unit of measure associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"unitOfMeasureResolutionStrategy"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["The source of the unit of measure associated with the inventory operation. Default value is ",(0,i.jsx)(t.code,{children:"STATIC"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"reasonCodeId"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the reason code associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"reasonCodeName"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The name of the reason code associated with the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"incrementProductionOrderCount"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Boolean"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsxs)(t.td,{children:["Indicates if the production order quantity should be updated if we are shipping or producing material. Default value is ",(0,i.jsx)(t.code,{children:"false"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"flushIntervalMillis"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Integer"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsxs)(t.td,{children:["The flush interval in milliseconds. Default value is ",(0,i.jsx)(t.code,{children:"0"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"id"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"The ULID of the inventory operation (optional, used for updating an existing inventory operation)."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"notes"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Notes related to the inventory operation."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"enabled"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Boolean"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Indicates if the inventory operation is active and enabled."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"spare1"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"spare2"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"spare3"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"True"}),(0,i.jsx)(t.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:"Returns a JSON object where keys are field names and values are lists of validation violation messages."}),"\n",(0,i.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Generate the object structure for a new inventory operation object\ninventory_operation_data = system.mes.inventory.operation.newInventoryOperation()\n\n# Set basic attributes for the new inventory operation\ninventory_operation_data['name'] = 'Lids'\ninventory_operation_data['sourceLocationId'] = '01JD7M94CJ-HPEQEJ1F-QA8EQ6VE'\n# (You can continue setting other properties as needed here)\n\n# Validate inventory operation parameters\nvalidation_errors = system.mes.inventory.operation.validateInventoryOperation(**inventory_operation_data)\n\nif len(validation_errors) > 0:\n    print('Validation errors found:', validation_errors)\nelse:\n    print('Inventory operation parameters are valid.')\n"})})]})}function a(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>o});var n=r(96540);const i={},d=n.createContext(i);function s(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);