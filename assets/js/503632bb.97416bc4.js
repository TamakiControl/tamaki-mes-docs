"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[8428],{6681:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var t=i(4848),s=i(8453);const a={},r="Equipment Schema Overview",o={id:"appendix/data-model/equipment-model/intro",title:"Equipment Schema Overview",description:"The Equipment schema in TamakiMES is designed to manage all aspects of physical assets within a manufacturing",source:"@site/docs/appendix/data-model/equipment-model/intro.md",sourceDirName:"appendix/data-model/equipment-model",slug:"/appendix/data-model/equipment-model/intro",permalink:"/tamaki-mes-docs/docs/appendix/data-model/equipment-model/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/data-model/equipment-model/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"personnel_person_certifications",permalink:"/tamaki-mes-docs/docs/appendix/data-model/personnel-model/personnel-person-certification"},next:{title:"equipment_classes",permalink:"/tamaki-mes-docs/docs/appendix/data-model/equipment-model/equipment-class"}},c={},d=[{value:"Core Components",id:"core-components",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const n={h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"equipment-schema-overview",children:"Equipment Schema Overview"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"Equipment"})," schema in ",(0,t.jsx)(n.strong,{children:"TamakiMES"})," is designed to manage all aspects of physical assets within a manufacturing\nenvironment. It enables tracking, categorizing, and maintaining equipment, ensuring that each piece is effectively\nmonitored and available for production activities."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"equipment-model.svg",src:i(1763).A+"",width:"2867",height:"3550"})}),"\n",(0,t.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Equipment Class"}),": Defines categories of equipment (e.g., Forklift, Pump), allowing similar types of equipment to be\ngrouped for streamlined management, reporting, and scheduling. Equipment Classes also store common properties that\napply to all equipment within that category."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Equipment"}),": Represents individual instances of equipment within the facility. Each equipment item is linked to an\nEquipment Class, inheriting standard properties, while also maintaining unique data specific to that item (e.g.,\nlocation, status). This provides a clear structure for managing both individual items and groups of similar assets."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Equipment Property"}),': Defines the attributes that are common across all items within an Equipment Class, such as "\nHorsepower" for motors or "Capacity" for tanks. This enables standardized property definitions for each category of\nequipment.']}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Equipment Property Value"}),": Stores specific values for each property at the individual equipment level, allowing\ncustomization per item. This ensures that each piece of equipment can be configured and tracked based on its unique\nspecifications."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Supplier"}),": Stores information about the suppliers from whom equipment is sourced, helping in tracking the origin,\nsupport contacts, and other relevant supplier data."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Maintenance Orders"}),": Tracks maintenance tasks for equipment, including scheduling and status updates. Maintenance\nOrders help ensure that equipment remains in optimal condition, with logs for planned and completed maintenance\nactivities."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Maintenance Plans"}),": Establishes recurring or triggered maintenance schedules for equipment, ensuring proactive\nupkeep. Maintenance Plans can automatically generate Maintenance Orders based on predefined triggers or schedules."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Document Model (Equipment Manuals)"}),": Provides storage for manuals and other documents associated with equipment.\nThis supports easy access to technical information, with version control for tracking document updates."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.p,{children:["The Equipment schema in ",(0,t.jsx)(n.strong,{children:"TamakiMES"})," allows for comprehensive management of physical assets, from categorizing\nequipment types to tracking individual items, maintenance, and documentation. This structure ensures that each piece of\nequipment is accurately monitored, maintained, and documented, supporting operational efficiency and asset longevity."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["This high-level overview provides a clear picture of how the ",(0,t.jsx)(n.strong,{children:"Equipment"})," schema functions within TamakiMES, without\ndelving into field-level details. Each component has a specific purpose, contributing to a complete and organized asset\nmanagement system."]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1763:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/equipment-model-9058f11ad1fd7528d2e6cebe1b0c036d.svg"},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(6540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);