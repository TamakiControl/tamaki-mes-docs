"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[5139],{43176:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"appendix/script-api/unit-of-measure-script-api/convert","title":"convert","description":"Converts the specified amount from one unit of measure to the other.","source":"@site/docs/appendix/script-api/unit-of-measure-script-api/convert.md","sourceDirName":"appendix/script-api/unit-of-measure-script-api","slug":"/appendix/script-api/unit-of-measure-script-api/convert","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/convert","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/convert.md","tags":[],"version":"current","sidebarPosition":27,"frontMatter":{"sidebar_position":27,"title":"convert","description":"Converts the specified amount from one unit of measure to the other."},"sidebar":"tutorialSidebar","previous":{"title":"getConversion","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/get-conversion"},"next":{"title":"REST API","permalink":"/tamaki-mes-docs/docs/category/rest-api"}}');var i=n(74848),s=n(28453);const o={sidebar_position:27,title:"convert",description:"Converts the specified amount from one unit of measure to the other."},d="system.mes.unitOfMeasure.convert",c={},a=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Method 1: Convert without material context",id:"method-1-convert-without-material-context",level:3},{value:"Method 2: Convert with material context",id:"method-2-convert-with-material-context",level:3},{value:"Returns",id:"returns",level:2},{value:"Example Usage",id:"example-usage",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"systemmesunitofmeasureconvert",children:"system.mes.unitOfMeasure.convert"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Converts the specified amount from one unit of measure to the other."}),"\n",(0,i.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"system.mes.unitOfMeasure.convert(amount, from, to)\nsystem.mes.unitOfMeasure.convert(amount, from, to, materialIdOrPath)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.h3,{id:"method-1-convert-without-material-context",children:"Method 1: Convert without material context"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Nullable"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"amount"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Double"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The amount to convert."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"from"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The ULID or name of the from unit of measure."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"to"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The ULID or name of the to unit of measure."})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"method-2-convert-with-material-context",children:"Method 2: Convert with material context"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Nullable"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"amount"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"Double"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The amount to convert."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"from"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The ULID or name of the from unit of measure."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"to"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The ULID or name of the to unit of measure."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"materialIdOrPath"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"String"})}),(0,i.jsx)(t.td,{children:"False"}),(0,i.jsx)(t.td,{children:"The ULID or path of the material associated with the conversion."})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(t.p,{children:"Returns the amount converted."}),"\n",(0,i.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# Convert the specified amount from one unit of measure to the other.\nconverted_amount = system.mes.unitOfMeasure.convert(100, 'Pound', 'Kg')\n\n# Output the amount converted to new unit of measure\nprint(converted_amount)\n"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var r=n(96540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);