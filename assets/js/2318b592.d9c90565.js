"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[31355],{2109:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"appendix/script-api/unit-of-measure-script-api/save-unit-of-measure-conversion","title":"saveUnitOfMeasureConversion","description":"Creates or updates a unit of measure conversion with specified parameters.","source":"@site/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure-conversion.md","sourceDirName":"appendix/script-api/unit-of-measure-script-api","slug":"/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure-conversion","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure-conversion","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/save-unit-of-measure-conversion.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14,"title":"saveUnitOfMeasureConversion","description":"Creates or updates a unit of measure conversion with specified parameters."},"sidebar":"tutorialSidebar","previous":{"title":"newUnitOfMeasureConversion","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/new-unit-of-measure-conversion"},"next":{"title":"doesConversionExist","permalink":"/tamaki-mes-docs/docs/appendix/script-api/unit-of-measure-script-api/does-conversion-exist"}}');var r=s(74848),i=s(28453);const o={sidebar_position:14,title:"saveUnitOfMeasureConversion",description:"Creates or updates a unit of measure conversion with specified parameters."},d="system.mes.unitOfMeasure.saveUnitOfMeasureConversion",a={},c=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"systemmesunitofmeasuresaveunitofmeasureconversion",children:"system.mes.unitOfMeasure.saveUnitOfMeasureConversion"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["Creates or updates a ",(0,r.jsx)(n.a,{href:"../../data-model/utility-models/unit-of-measure-model/unit-of-measure-conversion",children:"Unit Of Measure Conversions"})," record in the system based on the provided parameters."]}),"\n",(0,r.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"system.mes.unitOfMeasure.saveUnitOfMeasureConversion(**uomc_data)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Nullable"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fromId"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"The unit of measure the conversion is converting from."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"toId"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"The unit of measure the conversion is converting to."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"conversionFactor"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Double"})}),(0,r.jsx)(n.td,{children:"False"}),(0,r.jsx)(n.td,{children:"The number used to change the unit of measure from one set to the other."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"materialId"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"The material associated with the unit of measure conversion."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"String"})," (ULID)"]}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"The ULID of the unit of measure conversion (optional, used for updating an existing unit of measure conversion)."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"notes"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"Notes related to the unit of measure conversion."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"enabled"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Boolean"})}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsxs)(n.td,{children:["Indicates if the unit of measure conversion is active and enabled. Default value is ",(0,r.jsx)(n.code,{children:"true"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spare1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"Additional field for user-defined context."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spare2"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"Additional field for user-defined context."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spare3"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"String"})}),(0,r.jsx)(n.td,{children:"True"}),(0,r.jsx)(n.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:"Returns a JSON representation of the saved unit of measure conversion."}),"\n",(0,r.jsx)(n.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Generate the object structure for a new unit of measure conversion object, set the parameters and save it\nnew_uomc = system.mes.unitOfMeasure.newUnitOfMeasureConversion()\nnew_uomc['toId'] = '01JCH3T85P-KVCB8ZR5-0B83A3SX'\nnew_uomc['conversionFactor'] = 0.33\nnew_uomc['fromId'] = '01JCH4NB3J-BTERAZ27-QEQQN4ME'\nsaved_uomc = system.mes.unitOfMeasure.saveUnitOfMeasureConversion(**new_uomc)\n\n# Output the JSON representation of the saved unit of measure conversion\nprint(saved_uomc)\n\n# Generate the object structure for another new unit of measure conversion object to update the previous unit of measure conversion\nuomc_data = system.mes.unitOfMeasure.newUnitOfMeasureConversion()\n\n# Set basic attributes for the updated unit of measure conversion\nuomc_data['toId'] = '01JCH3T85P-KVCB8ZR5-0B83A3SX'\nuomc_data['conversionFactor'] = 0.33\nuomc_data['fromId'] = '01JCH4NB3J-BTERAZ27-QEQQN4ME'\nuomc_data['notes'] = 'Conversion from L to BT'\n# (You can continue setting other properties as needed here)\n\n# Save the unit of measure conversion to update it in the system\nupdated_uomc = system.mes.unitOfMeasure.saveUnitOfMeasureConversion(**uomc_data)\n\n# Output the JSON representation of the updated unit of measure conversion\nprint(updated_uomc)\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var t=s(96540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);