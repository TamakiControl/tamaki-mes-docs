"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[8155],{30550:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"appendix/script-api/inventory-script-api/save-lot","title":"saveLot","description":"Creates or updates an inventory lot with specified parameters.","source":"@site/docs/appendix/script-api/inventory-script-api/save-lot.md","sourceDirName":"appendix/script-api/inventory-script-api","slug":"/appendix/script-api/inventory-script-api/save-lot","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/save-lot","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/save-lot.md","tags":[],"version":"current","sidebarPosition":48,"frontMatter":{"sidebar_position":48,"title":"saveLot","description":"Creates or updates an inventory lot with specified parameters."},"sidebar":"tutorialSidebar","previous":{"title":"newLot","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/new-lot"},"next":{"title":"findLots","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-script-api/find-lots"}}');var s=n(74848),r=n(28453);const d={sidebar_position:48,title:"saveLot",description:"Creates or updates an inventory lot with specified parameters."},o="system.mes.inventory.saveLot",a={},l=[{value:"Description",id:"description",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Code Examples",id:"code-examples",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"systemmesinventorysavelot",children:"system.mes.inventory.saveLot"})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(t.p,{children:["Creates or updates an ",(0,s.jsx)(t.a,{href:"../../data-model/inventory-model/inventory-lot",children:"Inventory Lots"})," record in the system based on the provided parameters."]}),"\n",(0,s.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"system.mes.inventory.saveLot(**lot_data)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"name"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsx)(t.td,{children:"The name of the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"materialId"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,s.jsx)(t.td,{children:"The ULID of the material associated with this inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"status"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsx)(t.td,{children:"The status of the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"totalQuantity"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Double"})}),(0,s.jsx)(t.td,{children:"The total quantity of material in the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"unitOfMeasureId"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,s.jsx)(t.td,{children:"The ULID of the unit of measure for the quantity of the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"expirationDate"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Instant"})}),(0,s.jsx)(t.td,{children:"The expected expiration date of the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"closedDate"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Instant"})}),(0,s.jsx)(t.td,{children:"The date that the inventory lot was closed."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"supplierId"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,s.jsx)(t.td,{children:"The ULID of the supplier for the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"id"})}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"String"})," (ULID)"]}),(0,s.jsx)(t.td,{children:"The ULID of the inventory lot (optional, used for updating an existing inventory lot)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"notes"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsx)(t.td,{children:"Notes related to the inventory lot."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"enabled"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"Boolean"})}),(0,s.jsx)(t.td,{children:"Indicates if the inventory lot is active and enabled."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"spare1"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"spare2"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsx)(t.td,{children:"Additional field for user-defined context."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"spare3"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"String"})}),(0,s.jsx)(t.td,{children:"Additional field for user-defined context."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:"Returns a JSON representation of the saved inventory lot."}),"\n",(0,s.jsx)(t.h2,{id:"code-examples",children:"Code Examples"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"# Generate the object structure for a new inventory lot object, set the initial arguments and save it\nnew_lot = system.mes.inventory.newLot()\nnew_lot['name'] = 'L2824L9CO'\nnew_lot['materialId'] = '01JCH3GRA3-5ZYFZV5V-RW3FKFJX'\nnew_lot['unitOfMeasureId'] = '01JCH3T85P-KVCB8ZR5-0B83A3SX'\nsaved_lot = system.mes.inventory.saveLot(**new_lot)\n\n# Output the JSON representation of the saved inventory lot\nprint(saved_lot)\n\n# Generate the object structure for another new inventory lot object to update the previous inventory lot\nlot_data = system.mes.inventory.newLot()\n\n# Set basic attributes for the updated inventory lot\nlot_data['id'] = saved_lot.id\nlot_data['name'] = 'L2824L9CO'\nlot_data['materialId'] = '01JCH3GRA3-5ZYFZV5V-RW3FKFJX'\nlot_data['unitOfMeasureId'] = '01JCH3T85P-KVCB8ZR5-0B83A3SX'\nlot_data['totalQuantity'] = 100\n# (You can continue setting other properties as needed here)\n\n# Save the inventory lot to update it in the system\nupdated_lot = system.mes.inventory.saveLot(**lot_data)\n\n# Output the JSON representation of the updated inventory lot\nprint(updated_lot)\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);