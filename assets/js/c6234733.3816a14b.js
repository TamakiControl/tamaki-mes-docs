"use strict";(self.webpackChunktamaki_mes_docs=self.webpackChunktamaki_mes_docs||[]).push([[7063],{2603:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"appendix/script-api/inventory-operation-script-api/intro","title":"Introduction to Inventory Operation Script API","description":"Overview of functions available in the Inventory Operation Script API.","source":"@site/docs/appendix/script-api/inventory-operation-script-api/intro.md","sourceDirName":"appendix/script-api/inventory-operation-script-api","slug":"/appendix/script-api/inventory-operation-script-api/intro","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/TamakiControl/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Introduction to Inventory Operation Script API","description":"Overview of functions available in the Inventory Operation Script API."},"sidebar":"tutorialSidebar","previous":{"title":"getEquipmentClasses","permalink":"/tamaki-mes-docs/docs/appendix/script-api/equipment-script-api/get-equipment-classes"},"next":{"title":"newInventoryOperation","permalink":"/tamaki-mes-docs/docs/appendix/script-api/inventory-operation-script-api/new-inventory-operation"}}');var r=t(74848),i=t(28453);const a={sidebar_position:1,title:"Introduction to Inventory Operation Script API",description:"Overview of functions available in the Inventory Operation Script API."},s="Inventory Operation Script API",p={},d=[{value:"Function List",id:"function-list",level:2},{value:"newInventoryOperation",id:"newinventoryoperation",level:3},{value:"saveInventoryOperation",id:"saveinventoryoperation",level:3},{value:"getInventoryOperationsByOperation",id:"getinventoryoperationsbyoperation",level:3},{value:"getInventoryOperationsByLocation",id:"getinventoryoperationsbylocation",level:3},{value:"getInventoryOperations",id:"getinventoryoperations",level:3},{value:"getInventoryOperationReferences",id:"getinventoryoperationreferences",level:3},{value:"getInventoryOperationStatus",id:"getinventoryoperationstatus",level:3},{value:"validateInventoryOperation",id:"validateinventoryoperation",level:3},{value:"deleteInventoryOperation",id:"deleteinventoryoperation",level:3},{value:"executeInventoryOperation",id:"executeinventoryoperation",level:3},{value:"startInventoryOperation",id:"startinventoryoperation",level:3},{value:"stopInventoryOperation",id:"stopinventoryoperation",level:3},{value:"cancelInventoryOperation",id:"cancelinventoryoperation",level:3},{value:"updateInventoryOperationStatesFromDatabase",id:"updateinventoryoperationstatesfromdatabase",level:3}];function l(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"inventory-operation-script-api",children:"Inventory Operation Script API"})}),"\n",(0,r.jsx)(n.p,{children:"Welcome to the Inventory Operation Script API documentation. This API provides a comprehensive set of functions for managing and interacting with inventory operations within the system. Below is a list of available functions, each with a brief description and a link to its detailed documentation."}),"\n",(0,r.jsx)(n.h2,{id:"function-list",children:"Function List"}),"\n",(0,r.jsx)(n.p,{children:"Here's the reformatted list following the structure you provided:"}),"\n",(0,r.jsx)(n.h3,{id:"newinventoryoperation",children:(0,r.jsx)(n.a,{href:"./new-inventory-operation",children:"newInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Generates an empty non-persisted ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object to provide the structure required by the API to save a new record into the database.\nThis method must be combined with the ",(0,r.jsx)(n.a,{href:"./save-inventory-operation",children:"saveInventoryOperation"})," method in order to persist the record. Returns a JSON representation of the newly created Inventory Operation object."]}),"\n",(0,r.jsx)(n.h3,{id:"saveinventoryoperation",children:(0,r.jsx)(n.a,{href:"./save-inventory-operation",children:"saveInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Creates or updates an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," record in the system based on the provided parameters. Returns a JSON representation of the saved inventory operation."]}),"\n",(0,r.jsx)(n.h3,{id:"getinventoryoperationsbyoperation",children:(0,r.jsx)(n.a,{href:"./get-inventory-operations-by-operation",children:"getInventoryOperationsByOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves all the ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," records for a given operation. Returns a list of JSON objects representing all inventory operations for a given operation."]}),"\n",(0,r.jsx)(n.h3,{id:"getinventoryoperationsbylocation",children:(0,r.jsx)(n.a,{href:"./get-inventory-operations-by-location",children:"getInventoryOperationsByLocation"})}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves all the ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," records at a given location. Returns a list of JSON objects representing all inventory operations at the given location."]}),"\n",(0,r.jsx)(n.h3,{id:"getinventoryoperations",children:(0,r.jsx)(n.a,{href:"./get-inventory-operations",children:"getInventoryOperations"})}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves all the ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," records. Returns a list of JSON objects representing all inventory operations."]}),"\n",(0,r.jsx)(n.h3,{id:"getinventoryoperationreferences",children:(0,r.jsx)(n.a,{href:"./get-inventory-operation-references",children:"getInventoryOperationReferences"})}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves a list of references to an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object by its ID. Returns a list of JSON objects."]}),"\n",(0,r.jsx)(n.h3,{id:"getinventoryoperationstatus",children:(0,r.jsx)(n.a,{href:"./get-inventory-operation-status",children:"getInventoryOperationStatus"})}),"\n",(0,r.jsxs)(n.p,{children:["Retrieves the status of an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object by its ID. Returns the status of the inventory operation."]}),"\n",(0,r.jsx)(n.h3,{id:"validateinventoryoperation",children:(0,r.jsx)(n.a,{href:"./validate-inventory-operation",children:"validateInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Validates the specified parameters for an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," record and returns any validation errors.\nThis only checks if the inventory operation object can be saved based on the attributes given. Returns a JSON object where keys are field names and values are lists of validation violation messages."]}),"\n",(0,r.jsx)(n.h3,{id:"deleteinventoryoperation",children:(0,r.jsx)(n.a,{href:"./delete-inventory-operation",children:"deleteInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Deletes an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," record by its ID. This cannot delete an inventory operation with references to it. If successful, an ApiResponse Object is returned with the success bool set True."]}),"\n",(0,r.jsx)(n.h3,{id:"executeinventoryoperation",children:(0,r.jsx)(n.a,{href:"./execute-inventory-operation",children:"executeInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Executes an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object and creates a new inventory lot record without having to start and then stop the operation.\nIf ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object is already started, this will act as a ",(0,r.jsx)(n.a,{href:"./stop-inventory-operation",children:"stopInventoryOperation"}),".\nReturns a JSON object of the inventory lot record for the executed inventory operation."]}),"\n",(0,r.jsx)(n.h3,{id:"startinventoryoperation",children:(0,r.jsx)(n.a,{href:"./start-inventory-operation",children:"startInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Starts an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object. Returns a JSON object of the inventory lot record for the start of the inventory operation."]}),"\n",(0,r.jsx)(n.h3,{id:"stopinventoryoperation",children:(0,r.jsx)(n.a,{href:"./stop-inventory-operation",children:"stopInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Stops an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object. Returns a JSON object of the inventory lot record for the end of the inventory operation."]}),"\n",(0,r.jsx)(n.h3,{id:"cancelinventoryoperation",children:(0,r.jsx)(n.a,{href:"./cancel-inventory-operation",children:"cancelInventoryOperation"})}),"\n",(0,r.jsxs)(n.p,{children:["Cancels an ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," object. Returns a JSON object of the inventory lot record for the cancelled inventory operation."]}),"\n",(0,r.jsx)(n.h3,{id:"updateinventoryoperationstatesfromdatabase",children:(0,r.jsx)(n.a,{href:"./update-inventory-operation-states-from-database",children:"updateInventoryOperationStatesFromDatabase"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"No Parameter:"})," Updates the states of all the ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," from the database."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"With a Parameter:"})," Updates the states of only the specified ",(0,r.jsx)(n.a,{href:"../../data-model/inventory-model/inventory-operation",children:"Inventory Operations"})," from the database given\nthe ID of the inventory operations."]}),"\n",(0,r.jsx)(n.p,{children:"If successful, no response is returned."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"Explore each function\u2019s documentation for detailed usage examples and additional information."})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(96540);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);